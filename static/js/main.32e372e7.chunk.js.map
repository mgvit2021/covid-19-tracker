{"version":3,"sources":["components/Cards/Cards.module.css","components/IndiaStats/StateStats/StateStats.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","components/IndiaStats/ChartComponent/ChartComponent.js","components/IndiaStats/StatePicker/StatePicker.js","components/IndiaStats/StateStats/StateStats.js","components/CountryDetails/CountryDetails.js","components/Footer.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/CountryDetails/CountryDetails.module.css","components/IndiaStats/ChartComponent/ChartComponent.module.css","components/IndiaStats/StatePicker/StatePicker.module.css","images/covid19_logo.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","text1","variant","start","end","value","duration","separator","Date","toDateString","text2","text3","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","split","slice","join","mainChina","mainlandChina","otherLocations","fetchCountries","countries","countryList","name","fetchIndiaData","fetchContact","state","contacts","primary","number","regional","filter","obj","loc","contact","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","compareChart","chart","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","selectLine","ChartComponent","confirmedCasesIndian","confirmedCasesForeign","confirmedButLocationUnidentified","borderWidth","height","StatePicker","handleStateChange","allStates","StateStats","result","discharged","active","cards","CountryDetails","summary","stateData","inState","helpline","setState","getContact","num","this","props","countryHead","indiaStats","Component","Footer","href","App","quotes","fetchedData","quote","Math","floor","random","length","image","src","Corona","alt","blockquote","cursor","pause","items","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32e372e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2vnpx\",\"card\":\"Cards_card__9wJmO\",\"infected\":\"Cards_infected__2krA0\",\"recovered\":\"Cards_recovered__20vyN\",\"deaths\":\"Cards_deaths__2D3Kh\",\"text1\":\"Cards_text1__381wj\",\"text2\":\"Cards_text2__1AvhP\",\"text3\":\"Cards_text3__21Uek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StateStats_container__TJcJd\",\"card\":\"StateStats_card__13oEb\",\"infected\":\"StateStats_infected__3lHjL\",\"recovered\":\"StateStats_recovered__3x04k\",\"deaths\":\"StateStats_deaths__29Cpc\",\"text1\":\"StateStats_text1__hkFhU\",\"text2\":\"StateStats_text2__21mq9\",\"text3\":\"StateStats_text3__3ixck\"};","import React from 'react'\r\nimport { Card,Typography,CardContent, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames' //add multiple style components [concatenates the style names]\r\n\r\nexport default function Cards({data:{confirmed,recovered,deaths,lastUpdate}}) {\r\n    if(!confirmed){\r\n        return \"Loading...\"\r\n    }\r\n    //console.log(confirmed);\r\n    return (\r\n        <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography className={styles.text1} variant=\"h5\">\r\n                    <CountUp\r\n                        start={0}\r\n                        end={confirmed.value}\r\n                        duration={2.5}\r\n                        separator=\",\"\r\n                    />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography className={styles.text2} variant=\"h5\">\r\n                    <CountUp\r\n                        start={0}\r\n                        end={recovered.value}\r\n                        duration={2.5}\r\n                        separator=\",\"\r\n                    />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography className={styles.text3} variant=\"h5\">\r\n                    <CountUp\r\n                        start={0}\r\n                        end={deaths.value}\r\n                        duration={2.5}\r\n                        separator=\",\"\r\n                    />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of deaths due to COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\nconst inUrl = \"https://api.rootnet.in/covid19-in/stats/latest\"\r\nconst contactApi = \"https://api.rootnet.in/covid19-in/contacts\"\r\nexport const fetchData = async(country)=>{\r\n    let changeableUrl = url;\r\n    //undefined when called without country\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n        \r\n        return {confirmed,deaths,recovered,lastUpdate}\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n//toDateString()\r\nexport const fetchDailyData = async() =>{\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        //need an array of objects ?\r\n        const modifiedData = data.map(dailyData =>({\r\n            confirmed : dailyData.confirmed.total,\r\n            deaths : dailyData.deaths.total,\r\n            date : new Date(dailyData.reportDate).toDateString().split(\" \").slice(1,3).join(),\r\n            mainChina: dailyData.mainlandChina,\r\n            otherLocations: dailyData.otherLocations,\r\n            \r\n        }));\r\n        return modifiedData;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async() =>{\r\n    try{\r\n        const {data: { countries } } = await axios.get(`${url}/countries`)\r\n        const countryList = countries.map(country=> country.name);\r\n        \r\n        return countryList;\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n/* Indian Data API */\r\nexport const fetchIndiaData = async() =>{\r\n    try{\r\n        const {data:{data}} = await axios.get(inUrl)\r\n        return data;\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchContact = async(state) =>{\r\n    try{\r\n        const {data:{data:{contacts}}} = await axios.get(contactApi)\r\n        if(state===\"\"){\r\n            return contacts.primary.number\r\n        }\r\n        const contact = await contacts.regional.filter((obj) => obj.loc===state);\r\n        return contact[0].number;\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n","import React,{useState,useEffect} from 'react'\r\nimport {fetchDailyData} from '../../api'\r\nimport {Line, Bar} from 'react-chartjs-2'; \r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data,country}) => {\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchAPI = async ()=>{\r\n            const dailyData = await fetchDailyData();\r\n            setDailyData(dailyData);\r\n        }\r\n\r\n        //console.log(dailyData);\r\n\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        dailyData ? (\r\n\r\n        <Line \r\n            data={{\r\n                labels: dailyData.map(({date})=>date),\r\n                datasets:[\r\n                    {\r\n                        data: dailyData.map(({confirmed})=>confirmed),\r\n                        label: \"Infected\",\r\n                        borderColor: \"#3333ff\",\r\n                        fill:true,\r\n                    },\r\n                    {\r\n                        data: dailyData.map(({deaths})=>deaths),\r\n                        label: \"Deaths\",\r\n                        borderColor: \"red\",\r\n                        backgroundColor: 'rgba(255,0,0,0.5)',\r\n                        fill:true,\r\n                    }\r\n                ],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        data.confirmed ? (\r\n            <Bar \r\n                data={{\r\n                    labels: ['Infected','Recovered','Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                            \"rgba(0,0,255,0.5)\",\r\n                            \"rgba(0,255,0,0.5)\",\r\n                            \"rgba(255,0,0,0.5)\"\r\n                        ],\r\n                        data: [data.confirmed.value,data.recovered.value,data.deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend :{display:false},\r\n                    title : {display:true, text: `Current state in ${country}`},\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n\r\n    const compareChart = (\r\n        dailyData ? (\r\n\r\n        <Line \r\n            data={{\r\n                labels: dailyData.map(({date})=>date),\r\n                datasets:[\r\n                    {\r\n                        data: dailyData.map(({mainChina})=>mainChina),\r\n                        label: \"Mainland China\",\r\n                        borderColor: \"#bd2fff\",\r\n                        backgroundColor: '#bd2fff60',\r\n                        fill:true,\r\n                    },\r\n                    {\r\n                        data: dailyData.map(({otherLocations})=>otherLocations),\r\n                        label: \"Rest of the World\",\r\n                        borderColor: \"green\",\r\n                        backgroundColor: 'rgba(0,255,0,0.5)',\r\n                        fill:true,\r\n                    }\r\n                ],\r\n            }}\r\n        />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.chart}>\r\n                {country ? barChart : lineChart}\r\n            </div>\r\n            <div className={styles.chart}>\r\n                {country ? null : compareChart}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Chart;","import React,{useState,useEffect} from 'react'\r\nimport { NativeSelect,FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\nimport cx from 'classnames';\r\nexport default function CountryPicker({handleCountryChange}) {\r\n\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async()=>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n    //console.log(fetchedCountries);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n            <span className={cx([\"lead\",styles.selectLine])}>Detailed statistics of India on select.</span>\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Doughnut} from 'react-chartjs-2'\r\nimport styles from './ChartComponent.module.css'\r\nexport const ChartComponent = ({data}) => {\r\n    return (\r\n            <div>\r\n                    <div className={styles.chart}>\r\n                        <Doughnut \r\n                        data={{\r\n                            labels: [\"Indian\",\"Foreign\",\"Unknown\"],\r\n                            datasets:[{\r\n                                    data: [data.confirmedCasesIndian,data.confirmedCasesForeign,data.confirmedButLocationUnidentified],\r\n                                    backgroundColor: [\r\n                                        'rgba(255, 99, 132, 0.5)',\r\n                                        'rgba(54, 162, 235, 0.2)',\r\n                                        'rgba(255, 206, 86, 0.2)'\r\n                                    ],\r\n                                    borderColor: [\r\n                                        'rgba(255,99,132,1)',\r\n                                        'rgba(54, 162, 235, 1)',\r\n                                        'rgba(255, 206, 86, 1)'\r\n                                    ],\r\n                                    borderWidth: 1\r\n                                }],\r\n                            }}\r\n                        options={{\r\n                            title : {display:true, text: \"Indian vs Foreign Cases\"},\r\n                        }}\r\n                        height={230}\r\n                        />\r\n                    </div>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NativeSelect,FormControl } from '@material-ui/core';\r\nimport styles from './StatePicker.module.css'\r\nexport const StatePicker = ({data,handleStateChange}) => {\r\n    const allStates = data.map(({loc})=> loc);\r\n    return (\r\n        <div className=\"text-center\">\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleStateChange(e.target.value)}>\r\n                <option value=\"\">None</option>\r\n                {allStates.map((state,i)=> <option key={i} value={state}>{state}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Card,Typography,CardContent, Grid } from '@material-ui/core';\r\nimport styles from './StateStats.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\n\r\n\r\nexport const StateStats = ({data,state}) => {\r\n\r\n    if(state!==\"\"){\r\n        var result = data.filter((obj)=> obj.loc===state);\r\n        var discharged = result[0].discharged;\r\n        var active = result[0].confirmedCasesIndian - discharged;\r\n        var cards = (\r\n                <div className=\"text-center\">\r\n                <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={4} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Active</Typography>\r\n                        <Typography className={styles.text1} variant=\"h5\">\r\n                        <CountUp\r\n                            start={0}\r\n                            end={active}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        />\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={4} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography className={styles.text2} variant=\"h5\">\r\n                        <CountUp\r\n                            start={0}\r\n                            end={discharged}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        />\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            {cards}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport {fetchIndiaData, fetchContact} from '../../api'\r\nimport {ChartComponent} from '../IndiaStats/ChartComponent/ChartComponent'\r\nimport {StatePicker} from '../IndiaStats/StatePicker/StatePicker'\r\nimport {StateStats} from '../IndiaStats/StateStats/StateStats'\r\nimport styles from './CountryDetails.module.css';\r\nimport cx from 'classnames';\r\nexport class CountryDetails extends Component {\r\n    state={\r\n        summary:{},\r\n        stateData:{},\r\n        inState:\"\",\r\n        helpline:'',\r\n    }\r\n    async componentDidMount(){\r\n        const {summary,regional} = await fetchIndiaData();\r\n        this.setState({\r\n            summary: summary,\r\n            stateData: regional\r\n        })\r\n        this.getContact();\r\n        //console.log(this.state.summary.confirmedCasesIndian)\r\n    }\r\n    handleStateChange = async (inState)=>{\r\n        await this.setState({\r\n            inState:inState\r\n        })\r\n        this.getContact();\r\n    }\r\n    getContact = async()=>{\r\n        const num = await fetchContact(this.state.inState);\r\n        await this.setState({\r\n            helpline: num\r\n        });\r\n    }\r\n\r\n    indiaStats(){\r\n        if(this.props.country===\"India\"){\r\n            return(\r\n                <div>\r\n                    <h1 className={cx([\"lead\",\"text-center\",styles.countryHead])}>Covid-19 stats India</h1>\r\n                    <ChartComponent data={this.state.summary} />\r\n                    <StatePicker data={this.state.stateData} handleStateChange={this.handleStateChange} />\r\n                    <h5 className=\"lead m-4\">Helpline Number: {this.state.helpline}</h5>\r\n                    <StateStats data={this.state.stateData} state={this.state.inState} />\r\n                </div>\r\n            )\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n                //console.log(this.state.summary)\r\n               \r\n        return (\r\n            <div className={styles.container}>\r\n                {this.indiaStats()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CountryDetails\r\n","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"page-footer font-small blue pt-4\">\r\n        <div className=\"footer-copyright text-center py-3\">Made by Mridul Gupta &hearts;, do give a star\r\n            on<a href=\"https://github.com/mgvit2021/covid-19-tracker\"> GitHub</a>\r\n        </div>\r\n    </footer>\r\n    )\r\n}\r\n","import React,{Component} from 'react';\nimport styles from './App.module.css';\nimport {Cards,Chart,CountryPicker,CountryDetails} from './components'\nimport {fetchData} from './api/index';\nimport ReactRotatingText from 'react-rotating-text';\nimport Corona from './images/covid19_logo.png';\nimport cx from 'classnames'\nimport {Footer} from './components/Footer'\nclass App extends Component{\n  state={\n    data:{},\n    country:'',\n    quotes:[\n      \"Pandemic is not a word to use lightly or carelessly\",\n      \"Wash your hands regularly and sanitize after every foreign contact\",\n      \"Maintain social distance, atleast 1.5m should be maintained\",\n      \"Avoid family gatherings for sometime. Be a responsible citizen\"\n    ],\n  }\n  getRandomQuote(){\n    this.setState({\n      quote:this.state.quotes[Math.floor(Math.random())*this.state.quotes.length]})\n  }\n  async componentDidMount(){\n    const data = await fetchData();\n    this.setState({data});\n  }\n  \n  handleCountryChange = async(country)=>{\n    const fetchedData = await fetchData(country);\n    this.setState({\n      data:fetchedData,\n      country: country\n    })\n  }\n  \n  render(){\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={Corona} alt=\"COVID-logo\"/> \n        <blockquote className={cx([styles.blockquote,\"lead\"])}>\n          -<ReactRotatingText cursor={false} pause={2200} items={this.state.quotes} />\n        </blockquote>\n        <Cards data={this.state.data}/>\n        <CountryPicker handleCountryChange = {this.handleCountryChange}/>\n        <Chart data={this.state.data} country={this.state.country}/>\n        <CountryDetails country={this.state.country}/>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__T3yLt\",\"image\":\"App_image__2w4_n\",\"blockquote\":\"App_blockquote__W9cEy\",\"react-rotating-text-cursor\":\"App_react-rotating-text-cursor__1IWPb\",\"blinking-cursor\":\"App_blinking-cursor__3rils\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__qtfdY\",\"chart\":\"Chart_chart__ZWhJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2No1n\",\"selectLine\":\"CountryPicker_selectLine__2CO-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryDetails_container__2W_C8\",\"countryHead\":\"CountryDetails_countryHead__2AiGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ChartComponent_container__1hOuP\",\"chart\":\"ChartComponent_chart__32YJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"StatePicker_formControl__1R4hL\"};","module.exports = __webpack_public_path__ + \"static/media/covid19_logo.6ce9074d.png\";"],"sourceRoot":""}